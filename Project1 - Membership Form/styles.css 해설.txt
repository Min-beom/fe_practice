@import url('https://fonts.googleapis.com/css2?family=Open+Sans&display=swap');
				// import: css에서 다른 스타일 시트를 불러오는 명령어, url을 통해 google fonts					에 있는 폰트를 사용 가능: Open Sans 폰트 사용

:root{
    --success-color: #2ecc71;
    --error-color: #e74c3c;
}				// root 선택자를 사용하여 CSS 변수를 정의하면 변수는 문서 전체에서 사용 가능
				// success의 색은 연두색(#2ecc71) 색상, error의 색은(#e74c3c)로 고정
* {
    box-sizing: border-box;					padding = 속, border = 경계선
}				// * 선택자는 모든 html 요소를 선택하는 선택자. html 문서 내 모든 요소에 스타일 적용, box-sizing: width + height, border-box: 원래 css에서 요소의 width와 height를 정의할 때 padding과 border은 포함되지 않는데, 위 속성을 사용하면 width와 height를 정의할 때 padding과 border을  포함하여 계산하게 된다. 

body {						// body는 *와 기능이 똑같지만 *는 html의 모든 요소를 선택하는 반면 body는 body 선택자 안에 있는 요소에만 영향을 줌.
    background-color: #f9fafb;		// background: 페이지의 배경색을 저 색으로 설정
    font-family: 'Open Sans', sans-serif;	// font-family: Open Sans 폰트 사용, 불가하면 sans-serif로 대체
    display: flex;					// display: flex : body 선택자 안의 요소들이 플렉스 컨테이너 자식으로 들어가게 되며, 플렉스 아이템이 됨. 플렉스 컨테이너는 자식들을 행/열로 자유 배치 가능
    justify-content: center;			// 플렉스 아이템들을 수평으로 중앙정렬
    align-items: center;				// 플렉스 아이템들을 수직으로 중앙정렬
    min-height: 100vh;				// 뷰포트: 1024*768 해상도 컴퓨터 기준인 웹페이지가 타 기기로 갈 때 해당 기기의 화면 크기, 요소의 최소높이를 뷰포트의 100%로 설정 -> 화면 전체를 채움
    margin: 0;					// 기본 브라우저 적용 여백 제거. 요소가 페이지의 가장자리에 붙도록 함. 화면을 꽉 채움.
}

.container {								// html에서 container 클래스를 가진 요소에 대해
    background: #fff;						// 배경 색 설정
    border-radius: 5px;						// 요소의 모서리 반경을 5px로 하여 둥글게 만들기
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);		// 0: 수평방향 그림자 이동 거리, 2: 수직 방향 그림자 이동 거리, 10: 그림자의 흐림 정도, rgba: 기본 색인 검은색에 30%의 불투명도를 가진 색 사용
    width: 400px;							// 요소의 넓이를 400px로 설정
}

h2 {
    text-align: center;			// <h2> 요소의 텍스트를 수평으로 중앙 정렬
    margin: 0 0 20px;			// <h2> 요소의 여백을 설정 0: 위쪽 여백, 0: 오른쪽 여백, 20: 아래쪽 여백, 설정x: 왼쪽 여백은 기본값인 0
}

.form {					// html에서 form 클래스를 가진 요소에 대해
    padding: 30px 40px;		// padding: 내부 여백, 30: 위쪽과 아래쪽, 40: 오른쪽과 왼쪽
}

.form-control {				// html에서 form-control 클래스를 가진 요소에 대해
    margin-bottom: 10px;		// 요소의 아래쪽 여백을 10으로 지정 : 해당 클래스 요소와 그 아래에 위치한 다른 요소들 간의 간격 확보
    padding-bottom: 20px;		// 요소의 아래쪽 내부여백을 20으로 지정
    position: relative;			// 요소의 위치를 상대적으로 설정. 기본 위치를 기준으로 이동가능, 만약 자식 요소가 position: absolute;로 설정되어있다면 이 요소를 기준으로 이동 
}

.form-control label {
    color: #777;
    display: block;			// css에서 요소의 display 속성은 Block 요소, Inline 요소, Inline-block 요소가 있다. block 요소는 항상 새로운 줄에서 시작, 전체 너비를 차지-> 다른 요소와 별개의 영역 차지. 자동으로 위아래 여백을 가짐. inline 요소는 페이지 내에서 다른 요소와 같은 줄에 표시, 내용의 너비만큼만 공간 차지. inline-block 요소는 inline 요소와 비슷하지만 block 요소처럼 너비와 높이를 설정할 수 있다. inline으로 배치, block 요소의 특성을 가짐. 
} + 입력 필드 수직 정렬 display: block;

.form-control input {
    border: 2px solid #f0f0f0; 			// border: 테두리 두께, solid: 테두리 스타일: 실선, 테두리 색상
    border-radius: 4px;				// 모서리 둥글게
    display: block;					// 입력 필드를 block 요소로 설정하여 새로운 줄에서 시작하고 부모 요소의 전체 너비를 차지하게 함-> 레이블과 입력 필드 간의 정렬을 명확하게
    width: 100%;					// 입력 필드의 너비를 부모 요소인 form-control의 너비에 맞추어 100%로 설정-> 입력 필드가 부모 요소의 전체 폭을 차지
    padding: 10px;				// 내부 여백을 10만큼 상하좌우 모든 방향으로 추가
    font-size: 14px;				// 입력 필드 내의 텍스트 크기 14로 지정
}

.form-control input:focus {		// .form-control 클래스 내의 <input> 요소가 포커스 상태일 때 스타일
    outline: 0;			// 입력 필드가 focus를 받을 때(내 생각: 커서가 해당 필드에 있을 때): 기본적으로 브라우저가 표시하는 외곽선을 제거
    border-color: #777;		// focus 상태일 때 색상 변경 
}

.form-control.success input {
    border-color: var(--success-color);
}							// .form-control 클래스가 success 클래스를 포함하고 있을 때, 입력 필드의 테두리 색상을 --success-color 변수로 설정: 초기 설정

.form-control.error input {
    border-color: var(--error-color);
}

.form-control small {
    color: var(--error-color);		// <small> 요소의 텍스트 색상을 --error-color로 변경
    position: absolute;			// <small> 요소의 위치를 절대적으로 설정, 부모 요소인 .form-control를 기준으로 위치를 조정 가능
    bottom: 0;				// <small> 요소를 부모 요소의 아래쪽 경계에 위치
    left: 0;					// <small> 요소를 부모 요소의 왼쪽 경계에 위치
    visibility: visible;			// <small> 요소를 항상 보이도록 설정 -> visibillity: hidden일 경우 요소가 보이지 않게 됨. 
}

.form-control.error small {
    visibility: visible;			// error가 떠도 항상 보이도록 설정
}

.form button {
    cursor: pointer;			// 버튼 위에 커서를 올렸을 때 포인터(손가락) 모양으로 변경됨. -> 명확
    background-color: #3498db;	// 버튼 배경 색
    border: 2px solid #3498db;	// 버튼 테두리, 실선, 색
    border-radius: 4px;			// 버튼 모서리 둥글게
    color: #fff;				// 버튼 텍스트 색
    display: block;				// 버튼을 새로운 block 요소로 설정해 새로운 줄 시작, 전체 너비 차지-> 레이아웃 내 버튼의 위치 명확하게
    font-size: 16px;			// 버튼의 텍스트 크기 지정
    padding: 10px;			// 버튼의 내부 여백 지정-> 텍스트와 버튼 테두리 사이 공간을 만들어 클릭하기 쉬워보이게 함.
    margin-top: 20px;			// 버튼의 위쪽 여백 지정-> 버튼과 그 위에 위치한 요소 간 간격 확보
    width: 100%;				// 버튼의 너비를 부모 요소의 전체 너비에 맞추어 100%로 설정
}